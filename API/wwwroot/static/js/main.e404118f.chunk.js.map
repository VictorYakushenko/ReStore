{"version":3,"sources":["app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/acountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/Components/AppPagination.tsx","app/Components/CheckboxButtons.tsx","app/Components/RadioButtonGroup.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductsSearch.tsx","features/catalog/Catalog.tsx","app/Errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/home/HomePage.tsx","app/layout/SignedMenu.tsx","app/layout/Header.tsx","app/Errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/contact/ContactPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/Components/AppTextInput.tsx","app/Components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","app/context/StoreContext.tsx","index.tsx"],"names":["PaginatedResponse","items","metadata","metaData","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","details","removeBasketItemAsync","removeItem","bascketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","thunkApi","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","token","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","url","then","body","post","delete","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","AboutPage","useState","validationErrors","setValidationErrors","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","AppPagination","onPageChange","currentPage","totalCount","totalPages","Box","display","justifyContent","alignItems","Pagination","color","size","count","page","onChange","e","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","item","FormControlLabel","control","Checkbox","indexOf","value","newChecked","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","component","RadioGroup","Radio","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","sx","position","top","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","includes","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","sortOptions","selectAll","useEffect","columnSpacing","Paper","mb","p","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","margin","Remove","Add","Delete","BasketPage","ContactPage","Logn","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","AppTextInput","useController","defaultValue","fieldState","field","AppCheckbox","AddressForm","useFormContext","sm","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StoreContext","createContext","StoreProvider","children","Provider","prevState","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e404118f.chunk.js","sourcesContent":["export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T>{\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metadata: MetaData) {\r\n        this.items = items;\r\n        this.metaData = metadata\r\n    }\r\n}","export function getCookie(key: string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b ? b.pop() : \"\";\r\n}\r\n\r\nexport function currencyFormat(amount: number) {\r\n    return '$' + (amount / 100).toFixed(2);\r\n}","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Basket } from \"../../app/models/basket\";\r\nimport { getCookie } from \"../../app/util/util\";\r\n\r\ninterface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: 'idle'\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    'basket/fetchBasketAsync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie('buyerId')) return false;\r\n\r\n        }\r\n    }\r\n)\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket, { productId: number, quantity?: number }>(\r\n    'basket/addBasketItemAsync',\r\n    async ({ productId, quantity = 1 }, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.details })\r\n        }\r\n    }\r\n)\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void, { productId: number, quantity: number, name?: string }>(\r\n    'basket/removeBasketItemAsync',\r\n    async ({ productId, quantity }, thunkAPI) => {\r\n        try {\r\n            await agent.Basket.removeItem(productId, quantity)\r\n\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.details })\r\n        }\r\n    }\r\n)\r\n\r\nexport const bascketSlice = createSlice({\r\n    name: 'basket',\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const { productId, quantity } = action.meta.arg\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n\r\n            if (state.basket?.items[itemIndex].quantity === 0)\r\n                state.basket.items.splice(itemIndex, 1)\r\n\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\r\n            state.basket = action.payload;\r\n            state.status = 'idle'\r\n        })\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\r\n            state.status = 'idle'\r\n            console.log(action.payload)\r\n        })\r\n    })\r\n})\r\n\r\nexport const { setBasket, clearBasket } = bascketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { FieldValues } from \"react-hook-form\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/user\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n    user: User | null\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n    'account/signInUser',\r\n    async (data, thunkApi) => {\r\n        try {\r\n            const userDto = await agent.Account.login(data);\r\n            const { basket, ...user } = userDto;\r\n            if (basket) thunkApi.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async (_, thunkApi) => {\r\n        thunkApi.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)))\r\n        try {\r\n            const userDto = await agent.Account.currentUser();\r\n            const { basket, ...user } = userDto;\r\n            if (basket) thunkApi.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data })\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!localStorage.getItem('user')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState,\r\n    reducers: {\r\n        signOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            history.push('/')\r\n        },\r\n        setUser: (state, action) => {\r\n            state.user = action.payload;\r\n        }\r\n\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            toast.error('Session expired - please login again');\r\n            history.push('/');\r\n        })\r\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled),\r\n            (state, action) => {\r\n                state.user = action.payload\r\n            })\r\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\r\n            throw action.payload;\r\n        })\r\n    })\r\n})\r\n\r\nexport const { signOut, setUser } = accountSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/configureStore\";\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean;\r\n    filtersLoaded: boolean;\r\n    status: string;\r\n    brands: string[]\r\n    types: string[];\r\n    productParams: ProductParams;\r\n    metaData: MetaData | null;\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<Product>()\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', productParams.pageNumber.toString())\r\n    params.append('pageSize', productParams.pageSize.toString())\r\n    params.append('orderBy', productParams.orderBy)\r\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\r\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\r\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\r\n    return params;\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, { state: RootState }>(\r\n    'catalog/fetchProductsAsync',\r\n    async (_, thunkAPI) => {\r\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams)\r\n        try {\r\n            const response = await agent.Catalog.list(params);\r\n            thunkAPI.dispatch(setMetaData(response.metaData))\r\n            return response.items;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    'catalog/fetchProductAsync',\r\n    async (productId, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'catalog/fetchFilters',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n\r\n        }\r\n    }\r\n)\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: 'name',\r\n        brands: [],\r\n        types: []\r\n    }\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: 'idle',\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null\r\n    }),\r\n\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = { ...state.productParams, ...action.payload, pageNumber: 1 }\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = { ...state.productParams, ...action.payload }\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload;\r\n        },\r\n        resetProductParams: (state) => {\r\n            state.productParams = initParams();\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProducts';\r\n        })\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload);\r\n            state.status = 'idle';\r\n            state.productsLoaded = true;\r\n        })\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action.payload)\r\n            state.status = 'idle'\r\n        })\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProduct'\r\n        })\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.status = 'idle';\r\n        })\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = 'idle'\r\n        })\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = 'pendingFetchFilters'\r\n        });\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands;\r\n            state.types = action.payload.types;\r\n            state.filtersLoaded = true;\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n        })\r\n    })\r\n})\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\r\n\r\nexport const { setProductParams, resetProductParams, setMetaData, setPageNumber } = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport interface CounterState {\r\n    data: number;\r\n    title: string;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n    data: 42,\r\n    title: 'YARC (yet another redux counter with redux toolkit)'\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.data += action.payload\r\n        },\r\n        decrement: (state, action) => {\r\n            state.data -= action.payload\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const { increment, decrement } = counterSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { accountSlice } from \"../../features/account/acountSlice\";\r\nimport { bascketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\nimport { counterSlice } from \"../../features/contact/counterSlice\";\r\n\r\n// export function configureStore() {\r\n//     return createStore(counterReducer)\r\n// }\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        basket: bascketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer\r\n    }\r\n});\r\n\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { PaginatedResponse } from \"../models/pagination\";\r\nimport { store } from \"../store/configureStore\";\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500))\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n\r\n    if (process.env.NODE_ENV === 'development') await sleep();\r\n\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination))\r\n        return response;\r\n    }\r\n    return response\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title)\r\n            break;\r\n        case 401:\r\n            toast.error(data.title)\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error',\r\n                state: { error: data }\r\n            })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response)\r\n})\r\n\r\nconst request = {\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, { params: params }).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => request.get('products', params),\r\n    details: (id: number) => request.get(`products/${id}`),\r\n    fetchFilters: () => request.get('products/filters')\r\n}\r\n\r\nconst TestErrors = {\r\n    get400Error: () => request.get('buggy/bad-request'),\r\n    get401Error: () => request.get('buggy/unauthorised'),\r\n    get404Error: () => request.get('buggy/not-found'),\r\n    get500Error: () => request.get('buggy/server-error'),\r\n    getValidationError: () => request.get('buggy/validation-error'),\r\n}\r\n\r\nconst Basket = {\r\n    get: () => request.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => request.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => request.delete(`basket?productId=${productId}&quantity=${quantity}`)\r\n}\r\n\r\nconst Account = {\r\n    login: (values: any) => request.post('account/login', values),\r\n    register: (values: any) => request.post('account/register', values),\r\n    currentUser: () => request.get('account/currentUser'),\r\n    fetchAddress: () => request.get('account/savedAddress')\r\n}\r\n\r\nconst Orders = {\r\n    list: () => request.get('orders'),\r\n    fetch: (id: number) => request.get(`orders/${id}`),\r\n    create: (values: any) => request.post('orders', values)\r\n}\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => request.post('payments', {})\r\n}\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments\r\n}\r\n\r\nexport default agent;","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function AboutPage() {\r\n    const [validationErrors, setValidationErrors] = useState<string[]>([])\r\n\r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationError()\r\n            .then(() => console.log('should not see this'))\r\n            .catch(error => setValidationErrors(error));\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Typography gutterBottom variant='h2'>\r\n                Error for testing purposes\r\n            </Typography>\r\n            <ButtonGroup fullWidth>\r\n                <Button variant=\"contained\" onClick={() => agent.TestErrors.get400Error().catch(error => console.log(error))}>Test 400 Error</Button>\r\n                <Button variant=\"contained\" onClick={() => agent.TestErrors.get401Error().catch(error => console.log(error))}>Test 401 Error</Button>\r\n                <Button variant=\"contained\" onClick={() => agent.TestErrors.get404Error().catch(error => console.log(error))}>Test 404 Error</Button>\r\n                <Button variant=\"contained\" onClick={() => agent.TestErrors.get500Error().catch(error => console.log(error))}>Test 500 Error</Button>\r\n                <Button variant=\"contained\" onClick={getValidationError}>Test Validation Error</Button>\r\n            </ButtonGroup>\r\n            {validationErrors.length > 0 &&\r\n                <Alert severity=\"error\">\r\n                    <AlertTitle>Validation Error</AlertTitle>\r\n                    <List>\r\n                        {validationErrors.map(error => (\r\n                            <ListItem key={error}>\r\n                                <ListItemText>{error}</ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Alert>\r\n            }\r\n        </Container>\r\n    )\r\n}","import { Box, Typography, Pagination } from \"@mui/material\";\r\nimport { MetaData } from \"../models/pagination\";\r\n\r\ninterface Props {\r\n    metaData: MetaData;\r\n    onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({ metaData, onPageChange }: Props) {\r\n    const { currentPage, totalCount, totalPages, pageSize } = metaData;\r\n    return (<Box display='flex' justifyContent='space-between' alignItems='center'>\r\n        <Typography>\r\n            Displaying {(currentPage - 1) * pageSize + 1}-\r\n            {currentPage * pageSize > totalCount ? totalCount : currentPage * pageSize} of {totalCount} items\r\n        </Typography>\r\n        <Pagination\r\n            color='secondary'\r\n            size='large'\r\n            count={totalPages}\r\n            page={currentPage}\r\n            onChange={(e, page) => onPageChange(page)}\r\n        />\r\n    </Box>\r\n    )\r\n}","import { Checkbox, FormControlLabel, FormGroup } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Props {\r\n    items: string[];\r\n    checked?: string[];\r\n    onChange: (items: string[]) => void;\r\n}\r\n\r\nexport default function CheckboxButtons({ items, checked, onChange }: Props) {\r\n\r\n    const [checkedItems, setCheckedItems] = useState(checked || []);\r\n\r\n    function handleChecked(value: string) {\r\n        const currentIndex = checkedItems.findIndex(item => item === value);\r\n        let newChecked: string[] = [];\r\n        if (currentIndex === - 1) newChecked = [...checkedItems, value];\r\n        else newChecked = checkedItems.filter(item => item !== value);\r\n        setCheckedItems(newChecked);\r\n        onChange(newChecked);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            {items.map(item => (\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        checked={checkedItems.indexOf(item) !== -1}\r\n                        onClick={() => handleChecked(item)}\r\n                    />}\r\n                    label={item}\r\n                    key={item}\r\n                />))}\r\n        </FormGroup>\r\n    )\r\n}","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\r\n\r\ninterface Props {\r\n    options: any[];\r\n    onChange: (event: any) => void;\r\n    selectedValue: string;\r\n}\r\n\r\nexport default function RadioButtonGroup({ options, onChange, selectedValue }: Props) {\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <RadioGroup onChange={onChange} value={selectedValue}>\r\n                {options.map(({ value, label }) => (\r\n                    <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n\r\n}","import { Backdrop, Box, CircularProgress, Typography } from \"@mui/material\";\r\n\r\ninterface Props {\r\n    message?: string;\r\n}\r\n\r\nexport default function LoadingComponent({ message = 'Loading...' }: Props) {\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography variant='h4' sx={{ justifyContent: 'center', position: 'fixed', top: '60%' }}>{message}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n}","import { LoadingButton } from \"@mui/lab\";\r\nimport { Button, Card, CardActions, CardContent, CardMedia, Typography, CardHeader, Avatar } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\n\r\ninterface Props {\r\n    product: Product\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n    const { status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: \"secondary.main\" }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{ sx: { fontWeight: \"bold\", color: 'primary.main' } }}\r\n            />\r\n            <CardMedia\r\n                sx={{ height: 140, backgroundSize: \"contain\", bgcolor: 'primary.light' }}\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom color='secondary' variant=\"h5\" component=\"div\">\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.brand} / {product.type}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <LoadingButton loading={status.includes('pendingAddItem' + product.id)}\r\n                    onClick={() => dispatch(addBasketItemAsync({ productId: product.id }))}\r\n                    size=\"small\">Add to cart\r\n                </LoadingButton>\r\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\ninterface Props {\r\n    products: Product[]\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const { productsLoaded } = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {products.map(product => (\r\n                <Grid item xs={4} key={product.id} >\r\n                    {!productsLoaded ? (<ProductCardSkeleton />) : (<ProductCard product={product} />)}\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}","import { debounce, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\n\r\nexport default function ProductSearch() {\r\n    const { productParams } = useAppSelector(state => state.catalog);\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const debouncedSearch = debounce((event: any) => {\r\n        dispatch(setProductParams({ searchTerm: event.target.value }))\r\n    }, 1000)\r\n\r\n    return (\r\n        <TextField\r\n            label='Search products'\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={searchTerm || ''}\r\n            onChange={(event: any) => {\r\n                setSearchTerm(event.target.value);\r\n                debouncedSearch(event);\r\n            }}\r\n        />\r\n    )\r\n}","import { Grid, Paper } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport AppPagination from \"../../app/Components/AppPagination\";\r\nimport CheckboxButtons from \"../../app/Components/CheckboxButtons\";\r\nimport RadioButtonGroup from \"../../app/Components/RadioButtonGroup\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { fetchFilters, fetchProductsAsync, productSelectors, setPageNumber, setProductParams } from \"./catalogSlice\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProductSearch from \"./ProductsSearch\";\r\n\r\nconst sortOptions = [\r\n    { value: 'name', label: 'Alphabetical' },\r\n    { value: 'priceDesc', label: 'Price - High to low' },\r\n    { value: 'price', label: 'Price - Low to high' },\r\n]\r\n\r\nexport default function Catalog() {\r\n    const products = useAppSelector(productSelectors.selectAll);\r\n    const { productsLoaded, filtersLoaded, brands, types, productParams, metaData } = useAppSelector(state => state.catalog)\r\n    const dispatch = useAppDispatch();\r\n    useEffect(() => {\r\n        if (!productsLoaded) dispatch(fetchProductsAsync());\r\n\r\n    }, [productsLoaded, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!filtersLoaded) dispatch(fetchFilters());\r\n    }, [filtersLoaded, dispatch])\r\n\r\n    if (!filtersLoaded) return <LoadingComponent message='Loading products...' />\r\n    return (\r\n        <Grid container columnSpacing={4}>\r\n            <Grid item xs={3}>\r\n                <Paper sx={{ mb: 2 }}>\r\n                    <ProductSearch />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <RadioButtonGroup\r\n                        selectedValue={productParams.orderBy}\r\n                        options={sortOptions}\r\n                        onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\r\n                    />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={brands}\r\n                        checked={productParams.brands}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({ brands: items }))}\r\n                    />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={types}\r\n                        checked={productParams.types}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({ types: items }))}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <ProductList products={products} />\r\n            </Grid>\r\n            <Grid item xs={3} />\r\n            <Grid item xs={9} sx={{ mb: 2 }}>\r\n                {metaData &&\r\n                    <AppPagination\r\n                        metaData={metaData}\r\n                        onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\r\n\r\n                    />}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{ height: 400 }}>\r\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n}","import { LoadingButton } from \"@mui/lab\";\r\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NotFound from \"../../app/Errors/NotFound\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { addBasketItemAsync, removeBasketItemAsync } from \"../basket/basketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\r\n\r\nexport default function ProductDetails() {\r\n    const { basket, status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    const { id } = useParams<{ id: string }>();\r\n    const product = useAppSelector(state => productSelectors.selectById(state, id));\r\n    const { status: productStatus } = useAppSelector(state => state.catalog);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const item = basket?.items.find(i => i.productId === product?.id);\r\n\r\n    useEffect(() => {\r\n        if (item) setQuantity(item.quantity);\r\n        if (!product) dispatch(fetchProductAsync(parseInt(id)))\r\n    }, [id, item, product, dispatch]);\r\n\r\n    function handleImputChange(event: any) {\r\n        if (event.target.value >= 0) {\r\n            setQuantity(parseInt(event.target.value));\r\n        }\r\n    }\r\n\r\n    function handleUpdateCart() {\r\n        if (!item || quantity > item.quantity) {\r\n            const updatedQuantity = item ? quantity - item.quantity : quantity\r\n            dispatch(addBasketItemAsync({ productId: product?.id!, quantity: updatedQuantity }))\r\n\r\n        } else {\r\n            const updatedQuantity = item.quantity - quantity;\r\n            dispatch(removeBasketItemAsync({ productId: product?.id!, quantity: updatedQuantity }))\r\n        }\r\n    }\r\n\r\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading product...' />\r\n\r\n    if (!product) return <NotFound />\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>{product.name}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant='h4' color='secondary'>{(product.price / 100).toFixed(2)}</Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            onChange={handleImputChange}\r\n                            variant=\"outlined\"\r\n                            type='number'\r\n                            label='Quantity in Card'\r\n                            fullWidth\r\n                            value={quantity}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={item?.quantity === quantity || (!item && quantity === 0)}\r\n                            loading={status.includes('pending')}\r\n                            onClick={handleUpdateCart}\r\n                            sx={{ height: '55px' }}\r\n                            color='primary'\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                        >\r\n                            {item ? 'Update Quantity' : 'Add to Card'}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n","import { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{ display: 'block', width: '100%', maxHeight: 500 }} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{ display: 'block', width: '100%', maxHeight: 500 }} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{ display: 'block', width: '100%', maxHeight: 500 }} />\r\n                </div>\r\n            </Slider>\r\n            <Box display='flex' justifyContent='center' sx={{ p: 4 }}>\r\n                <Typography variant=\"h1\">\r\n                    Welocome to the shop!\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import { Button, Fade, Menu, MenuItem } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signOut } from \"../../features/account/acountSlice\";\r\nimport { clearBasket } from \"../../features/basket/basketSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\r\n\r\nexport default function SignedInMenu() {\r\n    const dispatch = useAppDispatch();\r\n    const { user } = useAppSelector(state => state.account);\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color='inherit'\r\n                onClick={handleClick}\r\n                sx={{ typography: 'h6' }}\r\n            >\r\n                {user?.email}\r\n            </Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem component={Link} to='orders' >My orders</MenuItem>\r\n                <MenuItem onClick={() => {\r\n                    dispatch(signOut());\r\n                    dispatch(clearBasket());\r\n                }}>Logout</MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}","import { ShoppingCart } from \"@mui/icons-material\";\r\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\nimport SignedInMenu from \"./SignedMenu\";\r\n\r\ninterface Props {\r\n    darkMode: boolean,\r\n    handleThemeChange: () => void;\r\n}\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }\r\n]\r\n\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' }\r\n]\r\n\r\nconst navStyles = {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: 'grey.500'\r\n    },\r\n    '&.active': {\r\n        color: 'text.secondary'\r\n    }\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const { user } = useAppSelector(state => state.account);\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Box display='flex' alignItems='center'>\r\n                    <Typography variant=\"h6\" component={NavLink} exact to='/' sx={navStyles}>\r\n                        RE-STORE\r\n                    </Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                </Box>\r\n\r\n\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={navStyles}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n\r\n                <Box display='flex' alignItems='center'>\r\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {user ? (\r\n                        <SignedInMenu />\r\n                    ) : (\r\n                        <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={navStyles}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n\r\n                        </List>)}\r\n\r\n                </Box>\r\n\r\n            </Toolbar>\r\n        </AppBar >\r\n    )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory();\r\n    const { state } = useLocation<any>();\r\n    return (\r\n        <Container component={Paper}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\r\n                    <Divider />\r\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                </>\r\n            ) : (\r\n                <Typography variant='h5' gutterBottom>Server error</Typography>\r\n            )}\r\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\r\n        </Container>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({ subtotal }: Props) {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    if (subtotal === undefined)\r\n        subtotal = basket?.items.reduce((sum, item) => sum + item.price * item.quantity, 0) ?? 0;\r\n    let deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{ fontStyle: 'italic' }}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\nexport default function BasketTable({ items, isBasket = true }: Props) {\r\n    const { status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Product</TableCell>\r\n                        <TableCell align=\"right\">Price</TableCell>\r\n                        <TableCell align=\"center\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Subtotal</TableCell>\r\n                        {isBasket &&\r\n                            <TableCell align=\"right\"></TableCell>}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {items.map((item) => (\r\n                        <TableRow\r\n                            key={item.productId}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <Box display='flex' alignItems='center'>\r\n                                    <img src={item.pictureUrl} alt={item.name} style={{ height: 50, margin: 20 }} />\r\n                                    <span>{item.name}</span>\r\n                                </Box>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">${(item.price / 100).toFixed(2)}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({\r\n                                            productId: item.productId, quantity: 1, name: 'rem'\r\n                                        }))}\r\n                                        color=\"error\">\r\n                                        <Remove />\r\n                                    </LoadingButton>}\r\n                                {item.quantity}\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingAddItem' + item.productId}\r\n                                        onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                                        color=\"secondary\">\r\n                                        <Add />\r\n                                    </LoadingButton>}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">${((item.price / 100) * item.quantity).toFixed(2)}</TableCell>\r\n                            {isBasket &&\r\n                                <TableCell align=\"right\">\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'del'}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({\r\n                                            productId: item.productId, quantity: item.quantity, name: 'del'\r\n                                        }))}\r\n                                        color=\"error\">\r\n                                        <Delete />\r\n                                    </LoadingButton>\r\n                                </TableCell>}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import { Button, Grid, Typography } from \"@mui/material\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport BasketSummary from \"./BasketSummary\";\r\nimport BasketTable from \"./BasketTable\";\r\n\r\n\r\nexport default function BasketPage() {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n\r\n    if (!basket) return <Typography variant=\"h3\">Your basket is empty</Typography>\r\n\r\n    return (\r\n        <>\r\n            <BasketTable items={basket.items} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                    <Button\r\n                        component={Link}\r\n                        to='/checkout'\r\n                        variant='contained'\r\n                        size='large'\r\n                        fullWidth\r\n                    >\r\n                        Checkout\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import { Button, ButtonGroup, Typography } from \"@mui/material\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { decrement, increment } from \"./counterSlice\";\r\n\r\nexport default function ContactPage() {\r\n    const dispatch = useAppDispatch();\r\n    const { data, title } = useAppSelector(state => state.counter)\r\n    return (\r\n        <>\r\n            <Typography variant='h2'>\r\n                {title}\r\n            </Typography>\r\n            <Typography variant='h5'>\r\n                The sata is: {data}\r\n            </Typography>\r\n            <ButtonGroup>\r\n                <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>Decrement</Button>\r\n                <Button onClick={() => dispatch(increment(1))} variant='contained' color='primary'>Increment</Button>\r\n                <Button onClick={() => dispatch(increment(5))} variant='contained' color='secondary'>Increment by 5</Button>\r\n            </ButtonGroup>\r\n        </>\r\n\r\n    )\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { Paper } from '@mui/material';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './acountSlice';\r\n\r\n\r\nexport default function Logn() {\r\n    const history = useHistory();\r\n    const location = useLocation<any>();\r\n    const dispatch = useAppDispatch();\r\n    const { register, handleSubmit, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: 'all'\r\n    })\r\n\r\n    async function submitForm(data: FieldValues) {\r\n        try {\r\n            await dispatch(signInUser(data));\r\n            history.push(location?.state?.from?.pathname || '/catalog')\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    autoFocus\r\n                    {...register('username', { required: 'Username is required' })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    {...register('password', { required: 'Password is required' })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    loading={isSubmitting}\r\n                    disabled={!isValid}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Sign In\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/register'>\r\n                            {\"Don't have an account? Sign Up\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Paper } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { useForm } from 'react-hook-form';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport default function Register() {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, setError, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: 'all'\r\n    })\r\n\r\n    function handleApiErrors(errors: any) {\r\n        if (errors) {\r\n            errors.forEach((error: string) => {\r\n                if (error.includes('Password')) {\r\n                    setError('password', { message: error })\r\n                } else if (error.includes('Email')) {\r\n                    setError('email', { message: error })\r\n                } else if (error.includes('Username')) {\r\n                    setError('username', { message: error })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Register\r\n            </Typography>\r\n            <Box component=\"form\"\r\n                onSubmit={handleSubmit((data) =>\r\n                    agent.Account.register(data)\r\n                        .then(() => {\r\n                            toast.success('Registration successful - you can now login');\r\n                            history.push('/login');\r\n                        })\r\n                        .catch(error => handleApiErrors(error)))}\r\n                noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    autoFocus\r\n                    {...register('username', { required: 'Username is required' })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Email address\"\r\n                    {...register('email', {\r\n                        required: 'Email is required',\r\n                        pattern: {\r\n                            value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                            message: 'Not a valid email address'\r\n                        }\r\n                    })}\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    {...register('password', {\r\n                        required: 'Password is required',\r\n                        pattern: {\r\n                            value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                            message: 'password does not meet complexity requirements'\r\n                        }\r\n\r\n                    })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    loading={isSubmitting}\r\n                    disabled={!isValid}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Register\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/login'>\r\n                            {\"Already have an account? Sign In\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import { ComponentType } from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any> | ComponentType<any>>\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n    const { user } = useAppSelector(state => state.account)\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                user ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}","import { Typography, Button, Grid, Box } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectedOrder: (id: number) => void;\r\n}\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\r\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\r\n            </Box>\r\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary subtotal={subtotal} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport OrderDetailed from \"./OrderDetailed\";\r\n\r\nexport default function Orders() {\r\n    const [orders, setOrders] = useState<Order[] | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        agent.Orders.list()\r\n            .then(orders => setOrders(orders))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (loading) return <LoadingComponent message=\"Loading orders...\" />\r\n\r\n    if (selectedOrderNumber > 0) return (\r\n        <OrderDetailed\r\n            order={orders?.find(o => o.id === selectedOrderNumber)!}\r\n            setSelectedOrder={setSelectedOrderNumber}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Order number</TableCell>\r\n                        <TableCell align=\"right\">Total</TableCell>\r\n                        <TableCell align=\"right\">Order Date</TableCell>\r\n                        <TableCell align=\"right\">Order Status</TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders?.map((order) => (\r\n                        <TableRow\r\n                            key={order.id}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {order.id}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>\r\n                                    View\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import { TextField } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: '' })\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            {...field}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            error={!!fieldState.error}\r\n            helperText={fieldState.error?.message}\r\n        />\r\n    )\r\n}","import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    disabled: boolean\r\n}\r\n\r\nexport default function AppCheckbox(props: Props) {\r\n    const { field } = useController({ ...props, defaultValue: false })\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    {...field}\r\n                    checked={field.value}\r\n                    color='secondary'\r\n                    disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    )\r\n\r\n}","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/Components/AppTextInput';\r\nimport AppCheckbox from '../../app/Components/AppCheckbox';\r\n\r\nexport default function AddressForm() {\r\n    const { control, formState } = useFormContext();\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AppTextInput control={control} name='fullName' label='Full name' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address1' label='Address 1' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address2' label='Address 2' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='city' label='City' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='state' label='State/Province/Region' />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='zip' label='Zip / Postal code' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='country' label='Country' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppCheckbox\r\n                        disabled={!formState}\r\n                        name='saveAddress'\r\n                        label='Save this as the default address'\r\n                        control={control} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps { }\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({ component: Component, ...props }: Props, ref: Ref<unknown>) {\r\n    const elementRef = useRef<any>();\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => elementRef.current.focus\r\n    }));\r\n\r\n    return (\r\n        <Component onReady={(element: any) => elementRef.current = element}\r\n            {...props}\r\n        />\r\n    )\r\n})","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/Components/AppTextInput';\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\r\nimport { StripeInput } from './StripeInput';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\n\r\ninterface Props {\r\n    cardState: { elementError: { [key in StripeElementType]?: string } };\r\n    onCardInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({ cardState, onCardInputChange }: Props) {\r\n    const { control } = useFormContext();\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Payment method\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <AppTextInput name='nameOnCard' label='Name on card' control={control} />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardNumber}\r\n                        helperText={cardState.elementError.cardNumber}\r\n                        id=\"cardNumber\"\r\n                        label=\"Card number\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-number\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardNumberElement\r\n                            }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardExpiry}\r\n                        helperText={cardState.elementError.cardExpiry}\r\n                        id=\"expDate\"\r\n                        label=\"Expiry date\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-exp\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardExpiryElement\r\n                            }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardCvc}\r\n                        helperText={cardState.elementError.cardCvc}\r\n                        id=\"cvv\"\r\n                        label=\"CVV\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-csc\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardCvcElement\r\n                            }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { Grid } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\nexport default function Review() {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Order summary\r\n            </Typography>\r\n            {basket &&\r\n                <BasketTable items={basket.items} isBasket={false} />}\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import * as yup from 'yup'\r\n\r\nexport const validationSchema = [\r\n    yup.object({\r\n        fullName: yup.string().required('Full name is requared'),\r\n        address1: yup.string().required('Address line 1 is requared'),\r\n        address2: yup.string().required('Address line 2 is requared'),\r\n        city: yup.string().required(),\r\n        state: yup.string().required(),\r\n        zip: yup.string().required(),\r\n        country: yup.string().required(),\r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n        nameOnCard: yup.string().required()\r\n    })\r\n] ","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationSchema } from \"./checkoutValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nexport default function CheckoutPage() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const [cardState, setCardState] = useState<{ elementError: { [key in StripeElementType]?: string } }>({ elementError: {} });\r\n    const [cardComplete, setCardComplete] = useState<any>({ cardNumber: false, cardExpiry: false, cardCvc: false });\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    function onCardInputChange(event: any) {\r\n        setCardState({\r\n            ...cardState,\r\n            elementError: {\r\n                ...cardState.elementError,\r\n                [event.elementType]: event.error?.message\r\n            }\r\n        })\r\n        setCardComplete({ ...cardComplete, [event.elementType]: event.complete });\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1:\r\n                return <Review />;\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    const currentValidationSchema = validationSchema[activeStep];\r\n\r\n    const methods = useForm({\r\n        mode: 'all',\r\n        resolver: yupResolver(currentValidationSchema)\r\n    });\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress()\r\n            .then(response => {\r\n                if (response) {\r\n                    methods.reset({ ...methods.getValues(), ...response, saveAddress: false })\r\n                }\r\n            })\r\n    }, [methods])\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return; // stripe not ready\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard\r\n                    }\r\n                }\r\n            });\r\n            console.log(paymentResult);\r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress });\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you - we have received your payment');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        } else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function submitDisabled(): boolean {\r\n        if (activeStep === steps.length - 1) {\r\n            return !cardComplete.cardCvc\r\n                || !cardComplete.cardExpiry\r\n                || !cardComplete.cardNumber\r\n                || !methods.formState.isValid\r\n        } else {\r\n            return !methods.formState.isValid\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #{orderNumber}. We have not emailed your order\r\n                                    confirmation, and will not send you an update when your order has\r\n                                    shipped as this is a fake store!\r\n                                </Typography>\r\n                            ) : (\r\n                                <Button variant='contained' onClick={handleBack}>\r\n                                    Go back and try again\r\n                                </Button>\r\n                            )}\r\n\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    loading={loading}\r\n                                    disabled={submitDisabled()}\r\n                                    variant=\"contained\"\r\n                                    type='submit'\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n\r\n    );\r\n}","import { ConstructionOutlined } from \"@mui/icons-material\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\n\r\nconst stripePromise = loadStripe('pk_test_51LRdZYBO5Z2t6a7prnDnnIemeCV6KDW9H2mKBw7FtXmVSrRiORRyQPa0teXP6pYcFK8WKkuVQ5v8TCmNx0pKOQRv00HrOS9Ada');\r\n\r\nexport default function CheckoutWrapper() {\r\n    const dispatch = useAppDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n            .then(basket => dispatch(setBasket(basket)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, [dispatch]);\r\n\r\n    if (loading) return <LoadingComponent message=\"Loading checkout...\" />\r\n\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutPage />\r\n        </Elements>\r\n    )\r\n\r\n}","import { Container, createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport HomePage from \"../../features/home/HomePage\";\nimport Header from \"./Header\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from \"../Errors/ServerError\";\nimport NotFound from \"../Errors/NotFound\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport CheckoutPage from \"../../features/checkout/CheckoutPage\";\nimport ContactPage from \"../../features/contact/ContactPage\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport { fetchCurrentUser } from \"../../features/account/acountSlice\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser());\n      await dispatch(fetchBasketAsync());\n    } catch (error) {\n      console.log(error)\n    }\n\n  }, [dispatch])\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false))\n  }, [initApp])\n\n  const [darkMode, setDarkMode] = useState(false)\n  const paletteType = darkMode ? 'dark' : 'light'\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: { default: paletteType === 'light' ? '#eaeaea' : '#121212' }\n    }\n  })\n\n  function handleThemeChange() {\n    setDarkMode(!darkMode)\n  }\n\n  if (loading) return <LoadingComponent message=\"Initialising app...\" />\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position='bottom-right' hideProgressBar theme='colored' />\n      <CssBaseline />\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n      <Route exact path='/' component={HomePage} />\n      <Route path={'/(.+)'} render={() => (\n        <Container sx={{ mb: 4 }}>\n          <Switch>\n            <Route exact path='/catalog' component={Catalog} />\n            <Route path='/catalog/:id' component={ProductDetails} />\n            <Route path='/about' component={AboutPage} />\n            <Route path='/contact' component={ContactPage} />\n            <Route path='/server-error' component={ServerError} />\n            <Route path='/basket' component={BasketPage} />\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\n            <PrivateRoute path='/orders' component={Orders} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n\n      )} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext, PropsWithChildren, useContext, useState } from \"react\";\r\nimport { Basket } from \"../models/basket\";\r\n\r\ninterface StoreContextValue {\r\n    basket: Basket | null,\r\n    setBasket: (basket: Basket) => void;\r\n    removeItem: (productId: number, quantity: number) => void;\r\n}\r\n\r\nexport const StoreContext = createContext<StoreContextValue | undefined>(undefined);\r\n\r\nexport function useStoreContext() {\r\n    const context = useContext(StoreContext);\r\n    if (context === undefined) {\r\n        throw Error('Opps - we do not seem to be iside the provider')\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function StoreProvider({ children }: PropsWithChildren<any>) {\r\n    const [basket, setBasket] = useState<Basket | null>(null);\r\n\r\n    function removeItem(productId: number, quantity: number) {\r\n\r\n        if (!basket) return;\r\n        const items = [...basket.items]\r\n        const itemIndex = items.findIndex(i => i.productId === productId);\r\n\r\n        if (itemIndex >= 0) {\r\n            items[itemIndex].quantity -= quantity\r\n            if (items[itemIndex].quantity === 0) items.splice(itemIndex, 1)\r\n            setBasket(prevState => {\r\n                return { ...prevState!, items }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StoreContext.Provider value={{ basket, setBasket, removeItem }}>\r\n            {children}\r\n        </StoreContext.Provider>)\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { StoreProvider } from './app/context/StoreContext';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store/configureStore';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css'\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <StoreProvider>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </StoreProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}