{"version":3,"sources":["app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/acountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/Components/AppPagination.tsx","app/Components/CheckboxButtons.tsx","app/Components/RadioButtonGroup.tsx","app/hooks/useProducts.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductsSearch.tsx","features/catalog/Catalog.tsx","app/Errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/home/HomePage.tsx","app/layout/SignedMenu.tsx","app/layout/Header.tsx","app/Errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/contact/ContactPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/Components/AppTextInput.tsx","app/Components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/Components/AppDropzone.tsx","app/Components/AppSelectList.tsx","features/admin/productValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","app/context/StoreContext.tsx","index.tsx"],"names":["PaginatedResponse","items","metadata","metaData","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","details","removeBasketItemAsync","removeItem","bascketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","thunkApi","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","roles","atob","token","split","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","url","then","body","post","delete","put","createFormData","item","formData","FormData","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","Admin","createProduct","product","updateProduct","deleteProduct","AboutPage","useState","validationErrors","setValidationErrors","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","AppPagination","onPageChange","currentPage","totalCount","totalPages","Box","display","justifyContent","alignItems","Pagination","color","size","count","page","onChange","e","handlePageChange","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","FormControlLabel","control","Checkbox","indexOf","value","newChecked","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","component","RadioGroup","Radio","useProducts","products","selectAll","useEffect","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","sx","position","top","ProductCard","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","includes","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","sortOptions","columnSpacing","Paper","mb","p","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","margin","Remove","Add","Delete","BasketPage","ContactPage","Logn","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","some","r","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","AppTextInput","useController","defaultValue","fieldState","field","multiline","rows","AppCheckbox","AddressForm","useFormContext","sm","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","AppDropzone","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","FormHelperText","AppSelectList","InputLabel","Select","index","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","isDirty","watchFile","revokeObjectURL","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","marginRight","handleSelectProduct","startIcon","Edit","App","initApp","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StoreContext","createContext","StoreProvider","children","Provider","prevState","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e30caca0.chunk.js","sourcesContent":["export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T>{\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metadata: MetaData) {\r\n        this.items = items;\r\n        this.metaData = metadata\r\n    }\r\n}","export function getCookie(key: string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b ? b.pop() : \"\";\r\n}\r\n\r\nexport function currencyFormat(amount: number) {\r\n    return '$' + (amount / 100).toFixed(2);\r\n}","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Basket } from \"../../app/models/basket\";\r\nimport { getCookie } from \"../../app/util/util\";\r\n\r\ninterface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: 'idle'\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    'basket/fetchBasketAsync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie('buyerId')) return false;\r\n\r\n        }\r\n    }\r\n)\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket, { productId: number, quantity?: number }>(\r\n    'basket/addBasketItemAsync',\r\n    async ({ productId, quantity = 1 }, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.details })\r\n        }\r\n    }\r\n)\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void, { productId: number, quantity: number, name?: string }>(\r\n    'basket/removeBasketItemAsync',\r\n    async ({ productId, quantity }, thunkAPI) => {\r\n        try {\r\n            await agent.Basket.removeItem(productId, quantity)\r\n\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.details })\r\n        }\r\n    }\r\n)\r\n\r\nexport const bascketSlice = createSlice({\r\n    name: 'basket',\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const { productId, quantity } = action.meta.arg\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n\r\n            if (state.basket?.items[itemIndex].quantity === 0)\r\n                state.basket.items.splice(itemIndex, 1)\r\n\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\r\n            state.basket = action.payload;\r\n            state.status = 'idle'\r\n        })\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\r\n            state.status = 'idle'\r\n            console.log(action.payload)\r\n        })\r\n    })\r\n})\r\n\r\nexport const { setBasket, clearBasket } = bascketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { FieldValues } from \"react-hook-form\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/user\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n    user: User | null\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n    'account/signInUser',\r\n    async (data, thunkApi) => {\r\n        try {\r\n            const userDto = await agent.Account.login(data);\r\n            const { basket, ...user } = userDto;\r\n            if (basket) thunkApi.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async (_, thunkApi) => {\r\n        thunkApi.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)))\r\n        try {\r\n            const userDto = await agent.Account.currentUser();\r\n            const { basket, ...user } = userDto;\r\n            if (basket) thunkApi.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkApi.rejectWithValue({ error: error.data })\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!localStorage.getItem('user')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState,\r\n    reducers: {\r\n        signOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            history.push('/')\r\n        },\r\n        setUser: (state, action) => {\r\n            let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\r\n            let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']\r\n            state.user = { ...action.payload, roles: typeof (roles) === 'string' ? [roles] : roles }\r\n        }\r\n\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            toast.error('Session expired - please login again');\r\n            history.push('/');\r\n        })\r\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled),\r\n            (state, action) => {\r\n                let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\r\n                let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']\r\n                state.user = { ...action.payload, roles: typeof (roles) === 'string' ? [roles] : roles }\r\n            })\r\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\r\n            throw action.payload;\r\n        })\r\n    })\r\n})\r\n\r\nexport const { signOut, setUser } = accountSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/configureStore\";\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean;\r\n    filtersLoaded: boolean;\r\n    status: string;\r\n    brands: string[]\r\n    types: string[];\r\n    productParams: ProductParams;\r\n    metaData: MetaData | null;\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<Product>()\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', productParams.pageNumber.toString())\r\n    params.append('pageSize', productParams.pageSize.toString())\r\n    params.append('orderBy', productParams.orderBy)\r\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\r\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\r\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\r\n    return params;\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, { state: RootState }>(\r\n    'catalog/fetchProductsAsync',\r\n    async (_, thunkAPI) => {\r\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams)\r\n        try {\r\n            const response = await agent.Catalog.list(params);\r\n            thunkAPI.dispatch(setMetaData(response.metaData))\r\n            return response.items;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    'catalog/fetchProductAsync',\r\n    async (productId, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'catalog/fetchFilters',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: 'name',\r\n        brands: [],\r\n        types: []\r\n    }\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: 'idle',\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null\r\n    }),\r\n\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = { ...state.productParams, ...action.payload, pageNumber: 1 }\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = { ...state.productParams, ...action.payload }\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload;\r\n        },\r\n        resetProductParams: (state) => {\r\n            state.productParams = initParams();\r\n        },\r\n        setProduct: (state, action) => {\r\n            state.productsLoaded = false;\r\n            productsAdapter.upsertOne(state, action.payload)\r\n\r\n        },\r\n        removeProduct: (state, action) => {\r\n            productsAdapter.removeOne(state, action.payload);\r\n            state.productsLoaded = false;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProducts';\r\n        })\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload);\r\n            state.status = 'idle';\r\n            state.productsLoaded = true;\r\n        })\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action.payload)\r\n            state.status = 'idle'\r\n        })\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProduct'\r\n        })\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.status = 'idle';\r\n        })\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = 'idle'\r\n        })\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = 'pendingFetchFilters'\r\n        });\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands;\r\n            state.types = action.payload.types;\r\n            state.filtersLoaded = true;\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n        })\r\n    })\r\n})\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\r\n\r\nexport const { setProductParams, resetProductParams, setMetaData, setPageNumber, setProduct, removeProduct } = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport interface CounterState {\r\n    data: number;\r\n    title: string;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n    data: 42,\r\n    title: 'YARC (yet another redux counter with redux toolkit)'\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.data += action.payload\r\n        },\r\n        decrement: (state, action) => {\r\n            state.data -= action.payload\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const { increment, decrement } = counterSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { accountSlice } from \"../../features/account/acountSlice\";\r\nimport { bascketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\nimport { counterSlice } from \"../../features/contact/counterSlice\";\r\n\r\n// export function configureStore() {\r\n//     return createStore(counterReducer)\r\n// }\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        basket: bascketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer\r\n    }\r\n});\r\n\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { PaginatedResponse } from \"../models/pagination\";\r\nimport { store } from \"../store/configureStore\";\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500))\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n\r\n    if (process.env.NODE_ENV === 'development') await sleep();\r\n\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination))\r\n        return response;\r\n    }\r\n    return response\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title)\r\n            break;\r\n        case 401:\r\n            toast.error(data.title)\r\n            break;\r\n        case 403:\r\n            toast.error('You are not allowed to do that')\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error',\r\n                state: { error: data }\r\n            })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response)\r\n})\r\n\r\nconst request = {\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, { params: params }).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n    postForm: (url: string, data: FormData) => axios.post(url, data, {\r\n        headers: { 'Content-type': 'multipart/form-data' }\r\n    }).then(responseBody),\r\n    putForm: (url: string, data: FormData) => axios.put(url, data, {\r\n        headers: { 'Content-type': 'multipart/form-data' }\r\n    }).then(responseBody)\r\n}\r\n\r\nfunction createFormData(item: any) {\r\n    let formData = new FormData();\r\n    for (const key in item) {\r\n        formData.append(key, item[key])\r\n    }\r\n    return formData;\r\n}\r\n\r\nconst Admin = {\r\n    createProduct: (product: any) => request.postForm('products', createFormData(product)),\r\n    updateProduct: (product: any) => request.putForm('products', createFormData(product)),\r\n    deleteProduct: (id: number) => request.delete(`products/${id}`)\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => request.get('products', params),\r\n    details: (id: number) => request.get(`products/${id}`),\r\n    fetchFilters: () => request.get('products/filters')\r\n}\r\n\r\nconst TestErrors = {\r\n    get400Error: () => request.get('buggy/bad-request'),\r\n    get401Error: () => request.get('buggy/unauthorised'),\r\n    get404Error: () => request.get('buggy/not-found'),\r\n    get500Error: () => request.get('buggy/server-error'),\r\n    getValidationError: () => request.get('buggy/validation-error'),\r\n}\r\n\r\nconst Basket = {\r\n    get: () => request.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => request.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => request.delete(`basket?productId=${productId}&quantity=${quantity}`)\r\n}\r\n\r\nconst Account = {\r\n    login: (values: any) => request.post('account/login', values),\r\n    register: (values: any) => request.post('account/register', values),\r\n    currentUser: () => request.get('account/currentUser'),\r\n    fetchAddress: () => request.get('account/savedAddress')\r\n}\r\n\r\nconst Orders = {\r\n    list: () => request.get('orders'),\r\n    fetch: (id: number) => request.get(`orders/${id}`),\r\n    create: (values: any) => request.post('orders', values)\r\n}\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => request.post('payments', {})\r\n}\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments,\r\n    Admin\r\n}\r\n\r\nexport default agent;","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function AboutPage() {\r\n    const [validationErrors, setValidationErrors] = useState<string[]>([])\r\n\r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationError()\r\n            .then(() => console.log('should not see this'))\r\n            .catch(error => setValidationErrors(error));\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Typography gutterBottom variant='h2'>\r\n                Error for testing purposes\r\n            </Typography>\r\n            <ButtonGroup fullWidth>\r\n                <Button variant=\"contained\" onClick={() => agent.TestErrors.get400Error().catch(error => console.log(error))}>Test 400 Error</Button>\r\n                <Button variant=\"contained\" onClick={() => agent.TestErrors.get401Error().catch(error => console.log(error))}>Test 401 Error</Button>\r\n                <Button variant=\"contained\" onClick={() => agent.TestErrors.get404Error().catch(error => console.log(error))}>Test 404 Error</Button>\r\n                <Button variant=\"contained\" onClick={() => agent.TestErrors.get500Error().catch(error => console.log(error))}>Test 500 Error</Button>\r\n                <Button variant=\"contained\" onClick={getValidationError}>Test Validation Error</Button>\r\n            </ButtonGroup>\r\n            {validationErrors.length > 0 &&\r\n                <Alert severity=\"error\">\r\n                    <AlertTitle>Validation Error</AlertTitle>\r\n                    <List>\r\n                        {validationErrors.map(error => (\r\n                            <ListItem key={error}>\r\n                                <ListItemText>{error}</ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Alert>\r\n            }\r\n        </Container>\r\n    )\r\n}","import { Box, Typography, Pagination } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { MetaData } from \"../models/pagination\";\r\n\r\ninterface Props {\r\n    metaData: MetaData;\r\n    onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({ metaData, onPageChange }: Props) {\r\n    const { currentPage, totalCount, totalPages, pageSize } = metaData;\r\n    const [pageNumber, setPageNumber] = useState(currentPage);\r\n\r\n    function handlePageChange(page: number) {\r\n        setPageNumber(page);\r\n        onPageChange(page)\r\n    }\r\n\r\n\r\n    return (<Box display='flex' justifyContent='space-between' alignItems='center'>\r\n        <Typography>\r\n            Displaying {(currentPage - 1) * pageSize + 1}-\r\n            {currentPage * pageSize > totalCount ? totalCount : currentPage * pageSize} of {totalCount} items\r\n        </Typography>\r\n        <Pagination\r\n            color='secondary'\r\n            size='large'\r\n            count={totalPages}\r\n            page={pageNumber}\r\n            onChange={(e, page) => handlePageChange(page)}\r\n        />\r\n    </Box>\r\n    )\r\n}","import { Checkbox, FormControlLabel, FormGroup } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Props {\r\n    items: string[];\r\n    checked?: string[];\r\n    onChange: (items: string[]) => void;\r\n}\r\n\r\nexport default function CheckboxButtons({ items, checked, onChange }: Props) {\r\n\r\n    const [checkedItems, setCheckedItems] = useState(checked || []);\r\n\r\n    function handleChecked(value: string) {\r\n        const currentIndex = checkedItems.findIndex(item => item === value);\r\n        let newChecked: string[] = [];\r\n        if (currentIndex === - 1) newChecked = [...checkedItems, value];\r\n        else newChecked = checkedItems.filter(item => item !== value);\r\n        setCheckedItems(newChecked);\r\n        onChange(newChecked);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            {items.map(item => (\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        checked={checkedItems.indexOf(item) !== -1}\r\n                        onClick={() => handleChecked(item)}\r\n                    />}\r\n                    label={item}\r\n                    key={item}\r\n                />))}\r\n        </FormGroup>\r\n    )\r\n}","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\r\n\r\ninterface Props {\r\n    options: any[];\r\n    onChange: (event: any) => void;\r\n    selectedValue: string;\r\n}\r\n\r\nexport default function RadioButtonGroup({ options, onChange, selectedValue }: Props) {\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <RadioGroup onChange={onChange} value={selectedValue}>\r\n                {options.map(({ value, label }) => (\r\n                    <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n\r\n}","import { useEffect } from \"react\";\r\nimport { productSelectors, fetchProductsAsync, fetchFilters } from \"../../features/catalog/catalogSlice\";\r\nimport { useAppSelector, useAppDispatch } from \"../store/configureStore\";\r\n\r\nexport default function useProducts() {\r\n    const products = useAppSelector(productSelectors.selectAll);\r\n    const { productsLoaded, filtersLoaded, brands, types, metaData } = useAppSelector(state => state.catalog)\r\n    const dispatch = useAppDispatch();\r\n    useEffect(() => {\r\n        if (!productsLoaded) dispatch(fetchProductsAsync());\r\n\r\n    }, [productsLoaded, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!filtersLoaded) dispatch(fetchFilters());\r\n    }, [filtersLoaded, dispatch])\r\n\r\n    return {\r\n        products,\r\n        productsLoaded,\r\n        filtersLoaded,\r\n        brands,\r\n        types,\r\n        metaData\r\n    }\r\n}","import { Backdrop, Box, CircularProgress, Typography } from \"@mui/material\";\r\n\r\ninterface Props {\r\n    message?: string;\r\n}\r\n\r\nexport default function LoadingComponent({ message = 'Loading...' }: Props) {\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography variant='h4' sx={{ justifyContent: 'center', position: 'fixed', top: '60%' }}>{message}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n}","import { LoadingButton } from \"@mui/lab\";\r\nimport { Button, Card, CardActions, CardContent, CardMedia, Typography, CardHeader, Avatar } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\n\r\ninterface Props {\r\n    product: Product\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n    const { status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: \"secondary.main\" }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{ sx: { fontWeight: \"bold\", color: 'primary.main' } }}\r\n            />\r\n            <CardMedia\r\n                sx={{ height: 140, backgroundSize: \"contain\", bgcolor: 'primary.light' }}\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom color='secondary' variant=\"h5\" component=\"div\">\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.brand} / {product.type}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <LoadingButton loading={status.includes('pendingAddItem' + product.id)}\r\n                    onClick={() => dispatch(addBasketItemAsync({ productId: product.id }))}\r\n                    size=\"small\">Add to cart\r\n                </LoadingButton>\r\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","import {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\ninterface Props {\r\n    products: Product[]\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const { productsLoaded } = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {products.map(product => (\r\n                <Grid item xs={4} key={product.id} >\r\n                    {!productsLoaded ? (<ProductCardSkeleton />) : (<ProductCard product={product} />)}\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}","import { debounce, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\n\r\nexport default function ProductSearch() {\r\n    const { productParams } = useAppSelector(state => state.catalog);\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const debouncedSearch = debounce((event: any) => {\r\n        dispatch(setProductParams({ searchTerm: event.target.value }))\r\n    }, 1000)\r\n\r\n    return (\r\n        <TextField\r\n            label='Search products'\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={searchTerm || ''}\r\n            onChange={(event: any) => {\r\n                setSearchTerm(event.target.value);\r\n                debouncedSearch(event);\r\n            }}\r\n        />\r\n    )\r\n}","import { Grid, Paper } from \"@mui/material\";\r\nimport AppPagination from \"../../app/Components/AppPagination\";\r\nimport CheckboxButtons from \"../../app/Components/CheckboxButtons\";\r\nimport RadioButtonGroup from \"../../app/Components/RadioButtonGroup\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setPageNumber, setProductParams } from \"./catalogSlice\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProductSearch from \"./ProductsSearch\";\r\n\r\nconst sortOptions = [\r\n    { value: 'name', label: 'Alphabetical' },\r\n    { value: 'priceDesc', label: 'Price - High to low' },\r\n    { value: 'price', label: 'Price - Low to high' },\r\n]\r\n\r\nexport default function Catalog() {\r\n    const { products, brands, types, filtersLoaded, metaData } = useProducts();\r\n    const { productParams } = useAppSelector(state => state.catalog)\r\n    const dispatch = useAppDispatch();\r\n\r\n    if (!filtersLoaded) return <LoadingComponent message='Loading products...' />\r\n\r\n    return (\r\n        <Grid container columnSpacing={4}>\r\n            <Grid item xs={3}>\r\n                <Paper sx={{ mb: 2 }}>\r\n                    <ProductSearch />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <RadioButtonGroup\r\n                        selectedValue={productParams.orderBy}\r\n                        options={sortOptions}\r\n                        onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\r\n                    />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={brands}\r\n                        checked={productParams.brands}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({ brands: items }))}\r\n                    />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={types}\r\n                        checked={productParams.types}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({ types: items }))}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <ProductList products={products} />\r\n            </Grid>\r\n            <Grid item xs={3} />\r\n            <Grid item xs={9} sx={{ mb: 2 }}>\r\n                {metaData &&\r\n                    <AppPagination\r\n                        metaData={metaData}\r\n                        onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\r\n\r\n                    />}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{ height: 400 }}>\r\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n}","import { LoadingButton } from \"@mui/lab\";\r\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NotFound from \"../../app/Errors/NotFound\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { addBasketItemAsync, removeBasketItemAsync } from \"../basket/basketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\r\n\r\nexport default function ProductDetails() {\r\n    const { basket, status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    const { id } = useParams<{ id: string }>();\r\n    const product = useAppSelector(state => productSelectors.selectById(state, id));\r\n    const { status: productStatus } = useAppSelector(state => state.catalog);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const item = basket?.items.find(i => i.productId === product?.id);\r\n\r\n    useEffect(() => {\r\n        if (item) setQuantity(item.quantity);\r\n        if (!product) dispatch(fetchProductAsync(parseInt(id)))\r\n    }, [id, item, product, dispatch]);\r\n\r\n    function handleImputChange(event: any) {\r\n        if (event.target.value >= 0) {\r\n            setQuantity(parseInt(event.target.value));\r\n        }\r\n    }\r\n\r\n    function handleUpdateCart() {\r\n        if (!item || quantity > item.quantity) {\r\n            const updatedQuantity = item ? quantity - item.quantity : quantity\r\n            dispatch(addBasketItemAsync({ productId: product?.id!, quantity: updatedQuantity }))\r\n\r\n        } else {\r\n            const updatedQuantity = item.quantity - quantity;\r\n            dispatch(removeBasketItemAsync({ productId: product?.id!, quantity: updatedQuantity }))\r\n        }\r\n    }\r\n\r\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading product...' />\r\n\r\n    if (!product) return <NotFound />\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>{product.name}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant='h4' color='secondary'>{(product.price / 100).toFixed(2)}</Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            onChange={handleImputChange}\r\n                            variant=\"outlined\"\r\n                            type='number'\r\n                            label='Quantity in Card'\r\n                            fullWidth\r\n                            value={quantity}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={item?.quantity === quantity || (!item && quantity === 0)}\r\n                            loading={status.includes('pending')}\r\n                            onClick={handleUpdateCart}\r\n                            sx={{ height: '55px' }}\r\n                            color='primary'\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                        >\r\n                            {item ? 'Update Quantity' : 'Add to Card'}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n","import { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{ display: 'block', width: '100%', maxHeight: 500 }} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{ display: 'block', width: '100%', maxHeight: 500 }} />\r\n                </div>\r\n                <div>\r\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{ display: 'block', width: '100%', maxHeight: 500 }} />\r\n                </div>\r\n            </Slider>\r\n            <Box display='flex' justifyContent='center' sx={{ p: 4 }}>\r\n                <Typography variant=\"h1\">\r\n                    Welocome to the shop!\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import { Button, Fade, Menu, MenuItem } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signOut } from \"../../features/account/acountSlice\";\r\nimport { clearBasket } from \"../../features/basket/basketSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\r\n\r\nexport default function SignedInMenu() {\r\n    const dispatch = useAppDispatch();\r\n    const { user } = useAppSelector(state => state.account);\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color='inherit'\r\n                onClick={handleClick}\r\n                sx={{ typography: 'h6' }}\r\n            >\r\n                {user?.email}\r\n            </Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem component={Link} to='orders' >My orders</MenuItem>\r\n                <MenuItem onClick={() => {\r\n                    dispatch(signOut());\r\n                    dispatch(clearBasket());\r\n                }}>Logout</MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}","import { ShoppingCart } from \"@mui/icons-material\";\r\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\nimport SignedInMenu from \"./SignedMenu\";\r\n\r\ninterface Props {\r\n    darkMode: boolean,\r\n    handleThemeChange: () => void;\r\n}\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }\r\n]\r\n\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' }\r\n]\r\n\r\nconst navStyles = {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: 'grey.500'\r\n    },\r\n    '&.active': {\r\n        color: 'text.secondary'\r\n    }\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const { user } = useAppSelector(state => state.account);\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Box display='flex' alignItems='center'>\r\n                    <Typography variant=\"h6\" component={NavLink} exact to='/' sx={navStyles}>\r\n                        RE-STORE\r\n                    </Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                </Box>\r\n\r\n\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={navStyles}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                    {user && user.roles?.includes('Admin') && <ListItem\r\n                        component={NavLink}\r\n                        to={'inventory'}\r\n                        sx={navStyles}\r\n                    >\r\n                        INVENTORY\r\n                    </ListItem>}\r\n                </List>\r\n\r\n                <Box display='flex' alignItems='center'>\r\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {user ? (\r\n                        <SignedInMenu />\r\n                    ) : (\r\n                        <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={navStyles}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n\r\n                        </List>)}\r\n\r\n                </Box>\r\n\r\n            </Toolbar>\r\n        </AppBar >\r\n    )\r\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory();\r\n    const { state } = useLocation<any>();\r\n    return (\r\n        <Container component={Paper}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\r\n                    <Divider />\r\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                </>\r\n            ) : (\r\n                <Typography variant='h5' gutterBottom>Server error</Typography>\r\n            )}\r\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\r\n        </Container>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({ subtotal }: Props) {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    if (subtotal === undefined)\r\n        subtotal = basket?.items.reduce((sum, item) => sum + item.price * item.quantity, 0) ?? 0;\r\n    let deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{ fontStyle: 'italic' }}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\nexport default function BasketTable({ items, isBasket = true }: Props) {\r\n    const { status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Product</TableCell>\r\n                        <TableCell align=\"right\">Price</TableCell>\r\n                        <TableCell align=\"center\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Subtotal</TableCell>\r\n                        {isBasket &&\r\n                            <TableCell align=\"right\"></TableCell>}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {items.map((item) => (\r\n                        <TableRow\r\n                            key={item.productId}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <Box display='flex' alignItems='center'>\r\n                                    <img src={item.pictureUrl} alt={item.name} style={{ height: 50, margin: 20 }} />\r\n                                    <span>{item.name}</span>\r\n                                </Box>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">${(item.price / 100).toFixed(2)}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({\r\n                                            productId: item.productId, quantity: 1, name: 'rem'\r\n                                        }))}\r\n                                        color=\"error\">\r\n                                        <Remove />\r\n                                    </LoadingButton>}\r\n                                {item.quantity}\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingAddItem' + item.productId}\r\n                                        onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                                        color=\"secondary\">\r\n                                        <Add />\r\n                                    </LoadingButton>}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">${((item.price / 100) * item.quantity).toFixed(2)}</TableCell>\r\n                            {isBasket &&\r\n                                <TableCell align=\"right\">\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'del'}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({\r\n                                            productId: item.productId, quantity: item.quantity, name: 'del'\r\n                                        }))}\r\n                                        color=\"error\">\r\n                                        <Delete />\r\n                                    </LoadingButton>\r\n                                </TableCell>}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import { Button, Grid, Typography } from \"@mui/material\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport BasketSummary from \"./BasketSummary\";\r\nimport BasketTable from \"./BasketTable\";\r\n\r\n\r\nexport default function BasketPage() {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n\r\n    if (!basket) return <Typography variant=\"h3\">Your basket is empty</Typography>\r\n\r\n    return (\r\n        <>\r\n            <BasketTable items={basket.items} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                    <Button\r\n                        component={Link}\r\n                        to='/checkout'\r\n                        variant='contained'\r\n                        size='large'\r\n                        fullWidth\r\n                    >\r\n                        Checkout\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import { Button, ButtonGroup, Typography } from \"@mui/material\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { decrement, increment } from \"./counterSlice\";\r\n\r\nexport default function ContactPage() {\r\n    const dispatch = useAppDispatch();\r\n    const { data, title } = useAppSelector(state => state.counter)\r\n    return (\r\n        <>\r\n            <Typography variant='h2'>\r\n                {title}\r\n            </Typography>\r\n            <Typography variant='h5'>\r\n                The sata is: {data}\r\n            </Typography>\r\n            <ButtonGroup>\r\n                <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>Decrement</Button>\r\n                <Button onClick={() => dispatch(increment(1))} variant='contained' color='primary'>Increment</Button>\r\n                <Button onClick={() => dispatch(increment(5))} variant='contained' color='secondary'>Increment by 5</Button>\r\n            </ButtonGroup>\r\n        </>\r\n\r\n    )\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { Paper } from '@mui/material';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './acountSlice';\r\n\r\n\r\nexport default function Logn() {\r\n    const history = useHistory();\r\n    const location = useLocation<any>();\r\n    const dispatch = useAppDispatch();\r\n    const { register, handleSubmit, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: 'all'\r\n    })\r\n\r\n    async function submitForm(data: FieldValues) {\r\n        try {\r\n            await dispatch(signInUser(data));\r\n            history.push(location?.state?.from?.pathname || '/catalog')\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    autoFocus\r\n                    {...register('username', { required: 'Username is required' })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    {...register('password', { required: 'Password is required' })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    loading={isSubmitting}\r\n                    disabled={!isValid}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Sign In\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/register'>\r\n                            {\"Don't have an account? Sign Up\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Paper } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { useForm } from 'react-hook-form';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport default function Register() {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, setError, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: 'all'\r\n    })\r\n\r\n    function handleApiErrors(errors: any) {\r\n        if (errors) {\r\n            errors.forEach((error: string) => {\r\n                if (error.includes('Password')) {\r\n                    setError('password', { message: error })\r\n                } else if (error.includes('Email')) {\r\n                    setError('email', { message: error })\r\n                } else if (error.includes('Username')) {\r\n                    setError('username', { message: error })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Register\r\n            </Typography>\r\n            <Box component=\"form\"\r\n                onSubmit={handleSubmit((data) =>\r\n                    agent.Account.register(data)\r\n                        .then(() => {\r\n                            toast.success('Registration successful - you can now login');\r\n                            history.push('/login');\r\n                        })\r\n                        .catch(error => handleApiErrors(error)))}\r\n                noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    autoFocus\r\n                    {...register('username', { required: 'Username is required' })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Email address\"\r\n                    {...register('email', {\r\n                        required: 'Email is required',\r\n                        pattern: {\r\n                            value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                            message: 'Not a valid email address'\r\n                        }\r\n                    })}\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    {...register('password', {\r\n                        required: 'Password is required',\r\n                        pattern: {\r\n                            value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                            message: 'password does not meet complexity requirements'\r\n                        }\r\n\r\n                    })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    loading={isSubmitting}\r\n                    disabled={!isValid}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Register\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/login'>\r\n                            {\"Already have an account? Sign In\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import { ComponentType } from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any> | ComponentType<any>>\r\n    roles?: string[];\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, roles, ...rest }: Props) {\r\n    const { user } = useAppSelector(state => state.account)\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                if (!user) {\r\n                    return <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                }\r\n                if (roles && !roles?.some(r => user.roles?.includes(r))) {\r\n                    toast.error('Not authorised to access this area');\r\n                    return <Redirect\r\n                        to={{\r\n                            pathname: \"/catalog\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                }\r\n                return <Component {...props} />\r\n            }}\r\n        />\r\n    );\r\n}","import { Typography, Button, Grid, Box } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectedOrder: (id: number) => void;\r\n}\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\r\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\r\n            </Box>\r\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary subtotal={subtotal} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport OrderDetailed from \"./OrderDetailed\";\r\n\r\nexport default function Orders() {\r\n    const [orders, setOrders] = useState<Order[] | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        agent.Orders.list()\r\n            .then(orders => setOrders(orders))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (loading) return <LoadingComponent message=\"Loading orders...\" />\r\n\r\n    if (selectedOrderNumber > 0) return (\r\n        <OrderDetailed\r\n            order={orders?.find(o => o.id === selectedOrderNumber)!}\r\n            setSelectedOrder={setSelectedOrderNumber}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Order number</TableCell>\r\n                        <TableCell align=\"right\">Total</TableCell>\r\n                        <TableCell align=\"right\">Order Date</TableCell>\r\n                        <TableCell align=\"right\">Order Status</TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders?.map((order) => (\r\n                        <TableRow\r\n                            key={order.id}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {order.id}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>\r\n                                    View\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import { TextField } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    multiline?: boolean;\r\n    rows?: number;\r\n    type?: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: '' })\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            {...field}\r\n            multiline={props.multiline}\r\n            rows={props.rows}\r\n            fullWidth\r\n            type={props.type}\r\n            variant='outlined'\r\n            error={!!fieldState.error}\r\n            helperText={fieldState.error?.message}\r\n        />\r\n    )\r\n}","import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    disabled: boolean\r\n}\r\n\r\nexport default function AppCheckbox(props: Props) {\r\n    const { field } = useController({ ...props, defaultValue: false })\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    {...field}\r\n                    checked={field.value}\r\n                    color='secondary'\r\n                    disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    )\r\n\r\n}","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/Components/AppTextInput';\r\nimport AppCheckbox from '../../app/Components/AppCheckbox';\r\n\r\nexport default function AddressForm() {\r\n    const { control, formState } = useFormContext();\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AppTextInput control={control} name='fullName' label='Full name' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address1' label='Address 1' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address2' label='Address 2' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='city' label='City' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='state' label='State/Province/Region' />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='zip' label='Zip / Postal code' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='country' label='Country' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppCheckbox\r\n                        disabled={!formState}\r\n                        name='saveAddress'\r\n                        label='Save this as the default address'\r\n                        control={control} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps { }\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({ component: Component, ...props }: Props, ref: Ref<unknown>) {\r\n    const elementRef = useRef<any>();\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => elementRef.current.focus\r\n    }));\r\n\r\n    return (\r\n        <Component onReady={(element: any) => elementRef.current = element}\r\n            {...props}\r\n        />\r\n    )\r\n})","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/Components/AppTextInput';\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\r\nimport { StripeInput } from './StripeInput';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\n\r\ninterface Props {\r\n    cardState: { elementError: { [key in StripeElementType]?: string } };\r\n    onCardInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({ cardState, onCardInputChange }: Props) {\r\n    const { control } = useFormContext();\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Payment method\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <AppTextInput name='nameOnCard' label='Name on card' control={control} />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardNumber}\r\n                        helperText={cardState.elementError.cardNumber}\r\n                        id=\"cardNumber\"\r\n                        label=\"Card number\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-number\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardNumberElement\r\n                            }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardExpiry}\r\n                        helperText={cardState.elementError.cardExpiry}\r\n                        id=\"expDate\"\r\n                        label=\"Expiry date\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-exp\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardExpiryElement\r\n                            }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardCvc}\r\n                        helperText={cardState.elementError.cardCvc}\r\n                        id=\"cvv\"\r\n                        label=\"CVV\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-csc\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        InputProps={{\r\n                            inputComponent: StripeInput,\r\n                            inputProps: {\r\n                                component: CardCvcElement\r\n                            }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { Grid } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\nexport default function Review() {\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Order summary\r\n            </Typography>\r\n            {basket &&\r\n                <BasketTable items={basket.items} isBasket={false} />}\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import * as yup from 'yup'\r\n\r\nexport const validationSchema = [\r\n    yup.object({\r\n        fullName: yup.string().required('Full name is requared'),\r\n        address1: yup.string().required('Address line 1 is requared'),\r\n        address2: yup.string().required('Address line 2 is requared'),\r\n        city: yup.string().required(),\r\n        state: yup.string().required(),\r\n        zip: yup.string().required(),\r\n        country: yup.string().required(),\r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n        nameOnCard: yup.string().required()\r\n    })\r\n] ","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationSchema } from \"./checkoutValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nexport default function CheckoutPage() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const [cardState, setCardState] = useState<{ elementError: { [key in StripeElementType]?: string } }>({ elementError: {} });\r\n    const [cardComplete, setCardComplete] = useState<any>({ cardNumber: false, cardExpiry: false, cardCvc: false });\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    function onCardInputChange(event: any) {\r\n        setCardState({\r\n            ...cardState,\r\n            elementError: {\r\n                ...cardState.elementError,\r\n                [event.elementType]: event.error?.message\r\n            }\r\n        })\r\n        setCardComplete({ ...cardComplete, [event.elementType]: event.complete });\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1:\r\n                return <Review />;\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    const currentValidationSchema = validationSchema[activeStep];\r\n\r\n    const methods = useForm({\r\n        mode: 'all',\r\n        resolver: yupResolver(currentValidationSchema)\r\n    });\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress()\r\n            .then(response => {\r\n                if (response) {\r\n                    methods.reset({ ...methods.getValues(), ...response, saveAddress: false })\r\n                }\r\n            })\r\n    }, [methods])\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return; // stripe not ready\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard\r\n                    }\r\n                }\r\n            });\r\n            console.log(paymentResult);\r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress });\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you - we have received your payment');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        } else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function submitDisabled(): boolean {\r\n        if (activeStep === steps.length - 1) {\r\n            return !cardComplete.cardCvc\r\n                || !cardComplete.cardExpiry\r\n                || !cardComplete.cardNumber\r\n                || !methods.formState.isValid\r\n        } else {\r\n            return !methods.formState.isValid\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #{orderNumber}. We have not emailed your order\r\n                                    confirmation, and will not send you an update when your order has\r\n                                    shipped as this is a fake store!\r\n                                </Typography>\r\n                            ) : (\r\n                                <Button variant='contained' onClick={handleBack}>\r\n                                    Go back and try again\r\n                                </Button>\r\n                            )}\r\n\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    loading={loading}\r\n                                    disabled={submitDisabled()}\r\n                                    variant=\"contained\"\r\n                                    type='submit'\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n\r\n    );\r\n}","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\n\r\nconst stripePromise = loadStripe('pk_test_51LRdZYBO5Z2t6a7prnDnnIemeCV6KDW9H2mKBw7FtXmVSrRiORRyQPa0teXP6pYcFK8WKkuVQ5v8TCmNx0pKOQRv00HrOS9Ada');\r\n\r\nexport default function CheckoutWrapper() {\r\n    const dispatch = useAppDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n            .then(basket => dispatch(setBasket(basket)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, [dispatch]);\r\n\r\n    if (loading) return <LoadingComponent message=\"Loading checkout...\" />\r\n\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutPage />\r\n        </Elements>\r\n    )\r\n\r\n}","import { UploadFile } from '@mui/icons-material'\r\nimport { FormControl, FormHelperText, Typography } from '@mui/material'\r\nimport { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { useController, UseControllerProps } from 'react-hook-form'\r\n\r\ninterface Props extends UseControllerProps { }\r\nexport default function AppDropzone(props: Props) {\r\n\r\n    const { fieldState, field } = useController({ ...props, defaultValue: null })\r\n\r\n    const dzStyles = {\r\n        display: 'flex',\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        alignItems: 'center',\r\n        height: 200,\r\n        width: 500\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: 'green'\r\n    }\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        acceptedFiles[0] = Object.assign(acceptedFiles[0], { preview: URL.createObjectURL(acceptedFiles[0]) });\r\n        field.onChange(acceptedFiles[0]);\r\n    }, [field])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div {...getRootProps()}>\r\n            <FormControl style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles} error={!!fieldState.error}>\r\n                <input {...getInputProps()} />\r\n                <UploadFile sx={{ fontSize: '100px' }} />\r\n                <Typography variant='h4'>Drop image here</Typography>\r\n                <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}","import { FormControl, FormHelperText, InputLabel, MenuItem, Select } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    items: string[];\r\n}\r\n\r\nexport default function AppSelectList(props: Props) {\r\n    const { fieldState, field } = useController({ ...props, defaultValue: '' })\r\n    return (\r\n        <FormControl fullWidth error={!!fieldState.error}>\r\n            <InputLabel>{props.label}</InputLabel>\r\n            <Select\r\n                value={field.value}\r\n                label={props.label}\r\n                onChange={field.onChange}\r\n            >\r\n                {props.items.map((item, index) => {\r\n                    return <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                })}\r\n            </Select>\r\n            <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}","import * as yup from 'yup'\r\n\r\nexport const validationSchema = yup.object({\r\n    name: yup.string().required(),\r\n    brand: yup.string().required(),\r\n    type: yup.string().required(),\r\n    price: yup.number().required().moreThan(100),\r\n    quantityInStock: yup.number().required().min(0),\r\n    description: yup.string().required(),\r\n    file: yup.mixed().when('pictureUrl', {\r\n        is: (value: string) => !value,\r\n        then: yup.mixed().required('Please provide an image')\r\n    })\r\n})","import { Typography, Grid, Paper, Box, Button } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { FieldValues, useForm } from \"react-hook-form\";\r\nimport AppDropzone from \"../../app/Components/AppDropzone\";\r\nimport AppSelectList from \"../../app/Components/AppSelectList\";\r\nimport AppTextInput from \"../../app/Components/AppTextInput\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationSchema } from \"./productValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setProduct } from \"../catalog/catalogSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\ninterface Props {\r\n    product?: Product;\r\n    cancelEdit: () => void;\r\n}\r\n\r\nexport default function ProductForm({ product, cancelEdit }: Props) {\r\n    const { control, reset, handleSubmit, watch, formState: { isDirty, isSubmitting } } = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n\r\n    const { brands, types } = useProducts();\r\n    const watchFile = watch('file', null);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (product && !watchFile && !isDirty) reset(product)\r\n        return () => {\r\n            if (watchFile) URL.revokeObjectURL(watchFile.preview)\r\n        }\r\n    }, [product, reset, watchFile, isDirty])\r\n\r\n    async function handleSubmitData(data: FieldValues) {\r\n        try {\r\n            let response: Product;\r\n            if (product) {\r\n                response = await agent.Admin.updateProduct(data);\r\n            } else {\r\n                response = await agent.Admin.createProduct(data);\r\n            }\r\n            dispatch(setProduct(response));\r\n            cancelEdit();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box component={Paper} sx={{ p: 4 }}>\r\n            <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\r\n                Product Details\r\n            </Typography>\r\n            <form onSubmit={handleSubmit(handleSubmitData)}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <AppTextInput control={control} name='name' label='Product name' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppSelectList control={control} items={brands} name='brand' label='Brand' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppSelectList control={control} items={types} name='type' label='Type' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppTextInput type='number' control={control} name='price' label='Price' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppTextInput type='number' control={control} name='quantityInStock' label='Quantity in Stock' />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <AppTextInput multiline={true} rows={4} control={control} name='description' label='Description' />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n                            <AppDropzone control={control} name='file' />\r\n                            {watchFile ?\r\n                                (<img src={watchFile.preview} alt='preview' style={{ maxHeight: 200 }} />) :\r\n                                (<img src={product?.pictureUrl} alt={product?.name} style={{ maxHeight: 200 }} />)}\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box display='flex' justifyContent='space-between' sx={{ mt: 3 }}>\r\n                    <Button onClick={cancelEdit} variant='contained' color='inherit'>Cancel</Button>\r\n                    <LoadingButton loading={isSubmitting} type='submit' variant='contained' color='success'>Submit</LoadingButton>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    );\r\n}\r\n","import { Typography, Button, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\r\nimport { Edit, Delete } from \"@mui/icons-material\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\nimport AppPagination from \"../../app/Components/AppPagination\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { removeProduct, setPageNumber } from \"../catalog/catalogSlice\";\r\nimport { useState } from \"react\";\r\nimport ProductForm from \"./ProductForm\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nexport default function Inventory() {\r\n    const { products, metaData } = useProducts();\r\n    const dispatch = useAppDispatch();\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState<Product | undefined>(undefined)\r\n    const [loading, setLoading] = useState(false);\r\n    const [target, setTarget] = useState(0);\r\n\r\n    function handleSelectProduct(product: Product) {\r\n        setSelectedProduct(product);\r\n        setEditMode(true);\r\n    }\r\n\r\n    function handleDeleteProduct(id: number) {\r\n        setLoading(true);\r\n        setTarget(id);\r\n        agent.Admin.deleteProduct(id)\r\n            .then(() => dispatch(removeProduct(id)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }\r\n\r\n    function cancelEdit() {\r\n        if (selectedProduct) setSelectedProduct(undefined);\r\n        setEditMode(false);\r\n    }\r\n\r\n    if (editMode) return <ProductForm product={selectedProduct} cancelEdit={cancelEdit} />\r\n\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} variant='h4'>Inventory</Typography>\r\n                <Button onClick={() => setEditMode(true)} sx={{ m: 2 }} size='large' variant='contained'>Create</Button>\r\n            </Box>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>#</TableCell>\r\n                            <TableCell align=\"left\">Product</TableCell>\r\n                            <TableCell align=\"right\">Price</TableCell>\r\n                            <TableCell align=\"center\">Type</TableCell>\r\n                            <TableCell align=\"center\">Brand</TableCell>\r\n                            <TableCell align=\"center\">Quantity</TableCell>\r\n                            <TableCell align=\"right\"></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {products.map((product) => (\r\n                            <TableRow\r\n                                key={product.id}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {product.id}\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">\r\n                                    <Box display='flex' alignItems='center'>\r\n                                        <img src={product.pictureUrl} alt={product.name} style={{ height: 50, marginRight: 20 }} />\r\n                                        <span>{product.name}</span>\r\n                                    </Box>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{currencyFormat(product.price)}</TableCell>\r\n                                <TableCell align=\"center\">{product.type}</TableCell>\r\n                                <TableCell align=\"center\">{product.brand}</TableCell>\r\n                                <TableCell align=\"center\">{product.quantityInStock}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Button onClick={() => handleSelectProduct(product)} startIcon={<Edit />} />\r\n                                    <LoadingButton\r\n                                        loading={loading && target === product.id}\r\n                                        startIcon={<Delete />} color='error'\r\n                                        onClick={() => handleDeleteProduct(product.id)} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {metaData &&\r\n                <Box sx={{ pt: 2 }}>\r\n                    <AppPagination metaData={metaData}\r\n                        onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))} />\r\n                </Box>\r\n            }\r\n        </>\r\n    )\r\n}","import { Container, createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport HomePage from \"../../features/home/HomePage\";\nimport Header from \"./Header\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from \"../Errors/ServerError\";\nimport NotFound from \"../Errors/NotFound\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ContactPage from \"../../features/contact/ContactPage\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport { fetchCurrentUser } from \"../../features/account/acountSlice\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\nimport Inventory from \"../../features/admin/Inventory\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser());\n      await dispatch(fetchBasketAsync());\n    } catch (error) {\n      console.log(error)\n    }\n\n  }, [dispatch])\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false))\n  }, [initApp])\n\n  const [darkMode, setDarkMode] = useState(false)\n  const paletteType = darkMode ? 'dark' : 'light'\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: { default: paletteType === 'light' ? '#eaeaea' : '#121212' }\n    }\n  })\n\n  function handleThemeChange() {\n    setDarkMode(!darkMode)\n  }\n\n  if (loading) return <LoadingComponent message=\"Initialising app...\" />\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position='bottom-right' hideProgressBar theme='colored' />\n      <CssBaseline />\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n      <Route exact path='/' component={HomePage} />\n      <Route path={'/(.+)'} render={() => (\n        <Container sx={{ mb: 4 }}>\n          <Switch>\n            <Route exact path='/catalog' component={Catalog} />\n            <Route path='/catalog/:id' component={ProductDetails} />\n            <Route path='/about' component={AboutPage} />\n            <Route path='/contact' component={ContactPage} />\n            <Route path='/server-error' component={ServerError} />\n            <Route path='/basket' component={BasketPage} />\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\n            <PrivateRoute path='/orders' component={Orders} />\n            <PrivateRoute roles={['Admin']} path='/inventory' component={Inventory} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n\n      )} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext, PropsWithChildren, useContext, useState } from \"react\";\r\nimport { Basket } from \"../models/basket\";\r\n\r\ninterface StoreContextValue {\r\n    basket: Basket | null,\r\n    setBasket: (basket: Basket) => void;\r\n    removeItem: (productId: number, quantity: number) => void;\r\n}\r\n\r\nexport const StoreContext = createContext<StoreContextValue | undefined>(undefined);\r\n\r\nexport function useStoreContext() {\r\n    const context = useContext(StoreContext);\r\n    if (context === undefined) {\r\n        throw Error('Opps - we do not seem to be iside the provider')\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function StoreProvider({ children }: PropsWithChildren<any>) {\r\n    const [basket, setBasket] = useState<Basket | null>(null);\r\n\r\n    function removeItem(productId: number, quantity: number) {\r\n\r\n        if (!basket) return;\r\n        const items = [...basket.items]\r\n        const itemIndex = items.findIndex(i => i.productId === productId);\r\n\r\n        if (itemIndex >= 0) {\r\n            items[itemIndex].quantity -= quantity\r\n            if (items[itemIndex].quantity === 0) items.splice(itemIndex, 1)\r\n            setBasket(prevState => {\r\n                return { ...prevState!, items }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StoreContext.Provider value={{ basket, setBasket, removeItem }}>\r\n            {children}\r\n        </StoreContext.Provider>)\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { StoreProvider } from './app/context/StoreContext';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store/configureStore';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css'\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <StoreProvider>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </StoreProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}